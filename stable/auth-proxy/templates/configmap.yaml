{{- template "common.configmap" (list . "auth-proxy.configmap") -}}
{{- define "auth-proxy.configmap" -}}
data:
  {{ .Values.envconsul.configFileName }}: |-
    pristine = {{ .Values.envconsul.pristine }}
    sanitize = {{ .Values.envconsul.sanitize }}
    upcase = {{ .Values.envconsul.upcase }}
    {{- range $index, $secret := .Values.envconsul.secrets }}
    secret {
      path = {{ $secret.path | quote }}
      no_prefix = {{ default "true" $secret.noPrefix }}
    }
    {{- end }}
    {{- range $index, $prefix :=.Values.envconsul.prefixes }}
    prefix {
      path = {{ $prefix.path | quote }}
    }
    {{- end }}
  {{ .Values.nginx.authProxyConfFile }}: |-
    upstream backend {
        server {{ .Values.upstreamService.host }}:{{ .Values.upstreamService.port}};
    }

    upstream auth {
        server 127.0.0.1:{{ .Values.authProxyPort }};
    }

    server {
        listen {{ .Values.nginx.service.internalPort }};

        error_page 401 = @error401;
        location @error401 {
            internal;
            rewrite ^(.*)$  /login break;

            proxy_pass http://auth;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass_request_headers      on;

        }

        location / {
            auth_request /authenticated;

            proxy_http_version 1.1;   
            proxy_pass http://backend;
            proxy_set_header Authorization "";
            auth_request_set $auth_http_x_remote_user $upstream_http_x_remote_user;
            auth_request_set $auth_http_x_remote_groups $upstream_http_x_remote_groups;
            proxy_set_header X-Remote-User $auth_http_x_remote_user;
            proxy_set_header X-Remote-Groups $auth_http_x_remote_groups;
        }

        location = /authenticated {
            internal;
            proxy_http_version 1.1;
            proxy_pass http://auth/authenticated;
            proxy_pass_request_body     off;
            proxy_set_header Content-Length "";
        }
    }
{{- end }}
