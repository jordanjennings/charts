apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "sas-token.fullname" . }}
  labels:
    app: {{ template "sas-token.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "sas-token.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: {{ .Values.prometheus.scrape | quote }}
        prometheus.io/probe: {{ .Values.prometheus.probe | quote }}
        prometheus.io/path: {{ .Values.prometheus.path | quote }}
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}

      initContainers:
      {{- if .Values.vault.enabled }}
          {{- include "vault_init_container" . | indent 8 }}

        - name: vault-generate-pki
          image: hashicorp/consul-template:0.19.5-scratch
          args:
            - -once
            - -config
            - {{ .Values.configPath }}/{{ .Values.consulTemplate.configFile }}
          env:
            - name: VAULT_ADDR
              value: {{ .Values.vault.addr}}
            {{- if .Values.vault.enabled }}
            {{- include "vault_token_env_var" . | indent 12 }}
            {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.configPath }}
              name: {{ template "sas-token.fullname" . }}
            - mountPath: {{ .Values.keystores.mount.path }}
              name: {{ .Values.keystores.mount.name }}
            - mountPath: {{ .Values.vault.caMountPath }}
              name: {{ .Values.vault.caSecretName }}
      {{- end }}
        - name: certs-to-keystores
          image: openjdk:8-jre-alpine
          imagePullPolicy: Always
          env:
            - name: KEYSTORE_INPUT_PEM_PATH
              value: "{{ .Values.keystores.mount.path }}/{{ .Values.keystores.keystore.pemFile }}"
            - name: KEYSTORE_OUTPUT_PKCS12_PATH
              value: "{{ .Values.keystores.mount.path }}/{{ .Values.keystores.keystore.pkcs12File }}"
            - name: TRUSTSTORE_INPUT_PEM_PATH
              value: "{{ .Values.keystores.truststore.pemMount.path }}/{{ .Values.keystores.truststore.pemFile }}"
            - name: TRUSTSTORE_OUTPUT_PKCS12_PATH
              value: "{{ .Values.keystores.mount.path }}/{{ .Values.keystores.truststore.pkcs12File }}"
            - name: STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "sas-token.fullname" . }}
                  key: {{ .Values.keystores.passwordSecret.key }}
          command:
            - "{{ .Values.configPath }}/{{ .Values.keystores.script }}"
          volumeMounts:
            - mountPath: {{ .Values.keystores.mount.path }}
              name: {{ .Values.keystores.mount.name }}
            - mountPath: {{ .Values.keystores.truststore.pemMount.path }}
              name: {{ .Values.keystores.truststore.pemMount.secretName }}
            - mountPath: {{ .Values.configPath }}
              name: {{ template "sas-token.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.vault.enabled }}
          {{- include "vault_token_env_var" . | indent 10 }}
          {{- end }}
          {{- if .Values.consul.enabled }}
          - name: CONSUL_HTTP_ADDR
            value: {{ .Values.consul.addr}}
          {{- end }}
          {{- if .Values.vault.enabled }}
          - name: VAULT_ADDR
            value: {{ .Values.vault.addr}}
          {{- end }}
          - name: SAS_PORT
            value: "{{ .Values.thriftPort }}"
          - name: SAS_HEALTH_CHECK_PORT
            value: "{{ .Values.health.port }}"
          - name: SAS_KEY_STORE
            value: "{{ .Values.keystores.mount.path }}/{{ .Values.keystores.keystore.pkcs12File }}"
          - name: SAS_KEY_STORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "sas-token.fullname" . }}
                key: {{ .Values.keystores.passwordSecret.key }}
          - name: SAS_TRUST_STORE
            value: "{{ .Values.keystores.mount.path }}/{{ .Values.keystores.truststore.pkcs12File }}"
          - name: SAS_TRUST_STORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "sas-token.fullname" . }}
                key: {{ .Values.keystores.passwordSecret.key }}
          - name: ENVCONSUL_CONFIG
            value: "{{ .Values.configPath }}/{{ .Values.envconsul.configFile }}"
          - name: JAVA_OPTIONS
            value: " {{ .Values.javaOptions }} {{ if .Values.logbackFile }}-Dlogback.configurationFile={{ .Values.configPath }}/{{ .Values.logbackFile}}{{ end }}"
          {{- if .Values.prometheus.enabled }}
          - name: PROMETHEUS_PORT
            value: {{ .Values.prometheus.port | quote }}
          {{- end }}
          ports:
            {{- if .Values.prometheus.enabled }}
            - containerPort: {{ .Values.prometheus.port }}
              name: metrics
              protocol: TCP
            {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.configPath }}
              name: {{ template "sas-token.fullname" . }}
            - mountPath: {{ .Values.keystores.mount.path }}
              name: {{ .Values.keystores.mount.name }}
            {{- if .Values.vault.enabled }}
            - mountPath: {{ .Values.vault.caMountPath }}
              name: {{ .Values.vault.caSecretName }}
            {{- end }}
            {{- if .Values.consul.enabled }}
            - mountPath: {{ .Values.consul.caMountPath }}
              name: {{ .Values.consul.caSecretName }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.health.path }}
              port: {{ .Values.health.port }}
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            successThreshold: {{ .Values.probes.successThreshold }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
          livenessProbe:
            httpGet:
              path: {{ .Values.health.path }}
              port: {{ .Values.health.port }}
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            successThreshold: {{ .Values.probes.successThreshold }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ template "sas-token.fullname" . }}
          configMap:
            name: {{ template "sas-token.fullname" . }}
            defaultMode: 0744
        - name: {{ .Values.keystores.mount.name }}
          emptyDir: {}
        - name: {{ .Values.keystores.truststore.pemMount.secretName }}
          secret:
            secretName: {{ .Values.keystores.truststore.pemMount.secretName }}
        - name: {{ .Values.vault.caSecretName }}
          secret:
            secretName: {{ .Values.vault.caSecretName }}
        - name: {{ .Values.consul.caSecretName }}
          secret:
            secretName: {{ .Values.consul.caSecretName }}
