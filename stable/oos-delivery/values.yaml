cronJob:
  schedule: "40 14 * * *"

image:
  repository: bossanova-cloud-container.jfrog.io/cloud-apps/
  name: cloud-oos-delivery
  #tag: .Chart.AppVersion is used for image pull unless tag specified
  pullPolicy: Always
imagePullSecrets:
  - dpr-secret
serviceAccountName: oos-delivery-service
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  #  nvidia.com/gpu: 1
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
  #  nvidia.com/gpu: 1

# extra environment secrets
environmentSecrets: {}

envconsul:
  configFileName: envconsul-config.hcl
  pristine: false
  sanitize: true
  upcase: true
  secrets: []
  prefixes: []

vault:
  enabled: True
  addr: http://10.0.2.2:8200
  auth:
    role: oos-delivery
    debug: true

consul:
  enabled: True
  addr: http://10.0.2.2:8500  

papertrailRegistration:
  apiToken: ""
  host: ""
  port: ""

prometheus:
  enabled: true
  scrape: true
  probe: true
  host: 0.0.0.0
  port: 9397

livenessProbe:
  host: 0.0.0.0
  port: 8080
  healthinessEndpoint: /healthz
  readinessEndpoint: /readyz
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

logging:
  logLevel: INFO
  configFileName: logging_config.ini
  config: |-
    [formatters]
    keys=default

    [formatter_default]
    format=time:%(asctime)s level:%(levelname)s %(message)s
    class=logging.Formatter

    [handlers]
    keys=console

    [handler_console]
    class=logging.StreamHandler
    level=DEBUG
    formatter=default
    args=tuple()

    [loggers]
    keys=root

    [logger_root]
    level=DEBUG
    formatter=default
    handlers=console

configMountPath: /etc/config

containerEntryCommand:
  - "envconsul"
  - "-config=$(ENVCONSUL_CONFIG)"

containerEntryCommandArgs:
  #- "oos_delivery"
  # [T2A-177] nkiraly_pgsql_shim: postgresql authn shim until [T2A-128] oos-delivery honors MASTER and READ connection credential leases
  - "/bin/bash"
  - "/etc/config/pgsqlCredentialWrapper.sh"

pgsqlCredentialWrapperFileName: pgsqlCredentialWrapper.sh
