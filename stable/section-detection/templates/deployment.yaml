apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "section-break-detection.fullname" . }}
  labels:
    {{ template "common.labels.standard" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "section-break-detection.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: {{ .Values.prometheus.scrape | quote }}
        prometheus.io/probe: {{ .Values.prometheus.probe | quote }}
        prometheus.io/path: {{ .Values.prometheus.path | quote }}
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      imagePullSecrets:
      {{- range .Values.imagePullSecrets }}
      - name: {{ . }}
      {{- end }}
      initContainers:      
      {{- if .Values.vault.enabled }}
      {{- include "vault_init_container" . | indent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - -config
            - "{{ .Values.configMountPath }}/{{ .Values.envconsul.configFileName }}"
            - -exec
            - section_break_detection 
          env:
          {{- if .Values.vault.enabled }}
          {{- include "vault_token_env_var" . | indent 10 }}
          {{- end }}
          {{- if .Values.consul.enabled }}
          - name: CONSUL_HTTP_ADDR
            value: {{ .Values.consul.addr}}
          {{- end }}
          {{- if .Values.vault.enabled }}
          - name: VAULT_ADDR
            value: {{ .Values.vault.addr}}
          {{- end }}
          {{- if .Values.prometheus.enabled }}
          - name: PROMETHEUS_PORT
            value: {{ .Values.prometheus.port | quote }}
          {{- end }}
          ports:
            {{- if .Values.prometheus.enabled }}
            - containerPort: {{ .Values.prometheus.port }}
              name: metrics
              protocol: TCP
            {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.configMountPath }}
              name: {{ template "section-break-detection.fullname" . }}
          # Since liveness currently depends on Prometheus
          {{- if .Values.prometheus.enabled }}        
          livenessProbe:
            httpGet:
              path: /metrics
              port: {{ .Values.prometheus.port }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
        - name: {{ template "section-break-detection.fullname" . }}
          configMap:
            name: {{ template "section-break-detection.fullname" . }}
